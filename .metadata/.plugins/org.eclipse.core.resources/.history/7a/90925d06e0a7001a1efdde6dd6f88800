<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.mybatis.dao.EmployeeMapper">

	<!-- public Map<String, Object> getEmpByIdReturnMap(Integer id); -->
	<select id="getEmpByIdReturnMap" resultType="map">
		select * from tbl_employee where id = #{id}
	</select>


	<!-- public List<Employee> getEmpsByLastNameLike(String lastName); -->
	<!-- 如果返回的是一个集合，resultType要写集合中元素的类型，而不是List -->
	<select id="getEmpsByLastNameLike" resultType="com.study.mybatis.bean.Employee">
		select * from tbl_employee where last_name like #{lastName}
	</select>


	<!-- public Employee getEmpByMap(Map<String,Object> map); -->
	<select id="getEmpByMap" resultType="com.study.mybatis.bean.Employee">
		select * from ${tableName} where id=#{id} and last_name=#{lastName}
	</select>


<!-- public Employee getEmpByIdAndLastName(@Param("id")Integer id, @Param("lastName")String lastName); -->
	<select id="getEmpByIdAndLastName" resultType="com.study.mybatis.bean.Employee">
		select * from tbl_employee where id=#{id} and last_name=#{lastName}
	</select>


<!-- 
namespace:名称空间; 指定为接口的全类名
id：唯一标识
resultType：返回值类型
#{id}：从传递过来的参数中取出id值
 -->
 
 	<!-- public Employee getEmpById(Integer id); -->
    <select id="getEmpById" resultType="emp">
        select * from tbl_employee where id = #{id}
    </select>

    
    <!-- public void addEmp(Employee employee); -->
    <!-- parameterType完全可以省略 -->
    <!-- mysql支持自增主键，自增主键的获取，mybatis也是使用statement.getGeneratedKeys() -->
    <!-- 
    	 useGeneratedKeys="true" 使用自增主键获取主键值策略
    	 keyProperty="id" mybatis获取到主键值后将这个值封装到bean的哪个属性中
     -->
    <insert id="addEmp" parameterType="com.study.mybatis.bean.Employee"
    	useGeneratedKeys="true" keyProperty="id">
    	insert into tbl_employee(last_name,email,gender)
    	values(#{lastName},#{email},#{gender});
    </insert>

    
    <!-- public void updateEmp(Employee employee); -->
    <update id="updateEmp">
    	update tbl_employee set 
    		last_name = #{lastName},
    		email = #{email},
    		gender = #{gender}
    	where
    		id = #{id}
    </update>

   
    <!-- public void deleteEmp(Integer id); -->
	<delete id="deleteEmp">
		delete from tbl_employee where id = #{id}
	</delete>

	
</mapper>